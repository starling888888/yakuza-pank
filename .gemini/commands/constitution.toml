description = "対話的または提供された原則入力からプロジェクト憲法を作成または更新し、すべての依存テンプレートが同期していることを確認します。"

prompt = """
---
description: 対話的または提供された原則入力からプロジェクト憲法を作成または更新し、すべての依存テンプレートが同期していることを確認します。
---

日本語で出力すること。
ユーザー入力は、エージェントから直接提供されるか、コマンド引数として提供されます - プロンプトを進める前に（空でない場合）それを**必ず**考慮に入れる必要があります。

ユーザー入力:

$ARGUMENTS

あなたは `.specify/memory/constitution.md` にあるプロジェクト憲法を更新しています。このファイルは、角括弧で囲まれたプレースホルダートークン（例：`[PROJECT_NAME]`、`[PRINCIPLE_1_NAME]`）を含むテンプレートです。あなたの仕事は、（a）具体的な値を収集/導出し、（b）テンプレートを正確に埋め、（c）依存する成果物全体に修正を伝播させることです。

次の実行フローに従ってください：

1. `.specify/memory/constitution.md` にある既存の憲法テンプレートを読み込みます。
   - `[ALL_CAPS_IDENTIFIER]` の形式のすべてのプレースホルダートークンを特定します。
   **重要**: ユーザーは、テンプレートで使用されているものよりも少ないまたは多い原則を要求する場合があります。数が指定されている場合は、それを尊重し、一般的なテンプレートに従ってください。それに応じてドキュメントを更新します。

2. プレースホルダーの値を収集/導出します：
   - ユーザー入力（会話）が値を提供する場合、それを使用します。
   - それ以外の場合は、既存のリポジトリコンテキスト（README、ドキュメント、埋め込まれている場合は以前の憲法バージョン）から推測します。
   - ガバナンスの日付について：`RATIFICATION_DATE` は元の採択日です（不明な場合は尋ねるかTODOをマークします）。変更が加えられた場合、`LAST_AMENDED_DATE` は今日の日付ですが、それ以外の場合は以前の日付を維持します。
   - `CONSTITUTION_VERSION` は、セマンティックバージョニングのルールに従ってインクリメントする必要があります。
     * メジャー：後方互換性のないガバナンス/原則の削除または再定義。
     * マイナー：新しい原則/セクションの追加または大幅に拡張されたガイダンス。
     * パッチ：明確化、表現、タイプミスの修正、非意味的な改良。
   - バージョンアップの種類が曖昧な場合は、最終決定する前に理由を提案します。

3. 更新された憲法の内容を下書きします：
   - すべてのプレースホルダーを具体的なテキストに置き換えます（プロジェクトがまだ定義しないことを選択した意図的に保持されたテンプレートスロットを除き、括弧で囲まれたトークンは残さないでください。残した場合は明示的に正当化してください）。
   - 見出しの階層を維持し、置き換えられたコメントは、まだ明確なガイダンスを追加している場合を除き、削除できます。
   - 各原則セクションが、簡潔な名前の行、交渉不可能なルールを捉えた段落（または箇条書き）、自明でない場合は明確な根拠を記載していることを確認します。
   - ガバナンスセクションに、修正手続き、バージョニングポリシー、およびコンプライアンスレビューの期待事項が記載されていることを確認します。

4. 一貫性伝播チェックリスト（以前のチェックリストをアクティブな検証に変換します）：
   - `.specify/templates/plan-template.md` を読み、すべての「憲法チェック」またはルールが更新された原則と一致していることを確認します。
   - `.specify/templates/spec-template.md` を読み、スコープ/要件の整合性を確認します。憲法が必須セクションまたは制約を追加/削除する場合は更新します。
   - `.specify/templates/tasks-template.md` を読み、タスクの分類が、原則に基づいた新しいまたは削除されたタスクタイプ（例：オブザーバビリティ、バージョニング、テスト規律）を反映していることを確認します。
   - `.specify/templates/commands/*.md` の各コマンドファイル（これを含む）を読み、一般的なガイダンスが必要な場合に古い参照（エージェント固有の名前、例：CLAUDEのみ）が残っていないことを確認します。
   - ランタイムガイダンスドキュメント（例：`README.md`、`docs/quickstart.md`、または存在する場合はエージェント固有のガイダンスファイル）を読みます。変更された原則への参照を更新します。

5. 同期影響レポートを作成します（更新後、憲法ファイルの先頭にHTMLコメントとして先頭に追加します）：
   - バージョン変更：古い→新しい
   - 変更された原則のリスト（名前が変更された場合は古いタイトル→新しいタイトル）
   - 追加されたセクション
   - 削除されたセクション
   - 更新が必要なテンプレート（✅更新済み/⚠保留中）とファイルパス
   - 意図的に延期されたプレースホルダーがある場合のフォローアップTODO。

6. 最終出力前の検証：
   - 説明のつかない角括弧トークンが残っていないこと。
   - バージョン行がレポートと一致していること。
   - 日付がISO形式YYYY-MM-DDであること。
   - 原則は宣言的で、テスト可能で、曖昧な言葉遣いがないこと（「should」→適切な場合はMUST/SHOULDの根拠に置き換える）。

7. 完成した憲法を `.specify/memory/constitution.md` に書き戻します（上書き）。

8. ユーザーに最終的な要約を出力します：
   - 新しいバージョンとバージョンアップの根拠。
   - 手動でのフォローアップが必要なファイル。
   - 推奨されるコミットメッセージ（例：`docs: vX.Y.Zに憲法を修正（原則の追加+ガバナンスの更新）`）。

フォーマットとスタイルの要件：
- テンプレートとまったく同じようにMarkdownの見出しを使用します（レベルを下げたり上げたりしないでください）。
- 読みやすさを保つために長い根拠の行を折り返します（理想的には100文字未満）が、不自然な改行で厳密に強制しないでください。
- セクション間に1行の空白行を維持します。
- 末尾の空白を避けます。

ユーザーが部分的な更新（例：1つの原則の改訂のみ）を提供した場合でも、検証とバージョン決定のステップを実行します。

重要な情報が欠落している場合（例：批准日が本当に不明な場合）、`TODO(<FIELD_NAME>): 説明` を挿入し、延期された項目として同期影響レポートに含めます。

新しいテンプレートを作成しないでください。常に既存の `.specify/memory/constitution.md` ファイルを操作してください。
"""